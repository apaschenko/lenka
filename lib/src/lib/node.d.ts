import { LNode, LSummary, LChildren, LChildrenKeys, LChildrenValues } from './ifaces';
import { LProducedAs } from './general_types';
import { ExtendedPieceType } from './piece_types';
import { LenkaCustomizerParams } from './customizer_params';
export declare class LenkaNode implements LNode {
    constructor(value: LenkaNode['_value'], summary: LSummary);
    static createRootNode(params: {
        value: LenkaNode['_value'];
        summary: LenkaNode['summary'];
        index: LenkaNode['_index'];
    }): LenkaNode;
    static emptyChildrenSet<T>(init: () => T): LChildren<T>;
    getChildValue(producedBy: unknown, producedAs: LProducedAs): any;
    createChild(producedBy: unknown, producedAs: LProducedAs, parentTarget?: LenkaNode): LenkaNode;
    addToNodesToLabels(): void;
    setFlags(): void;
    createInstance(): void;
    linkTargetToParent(): void;
    getChildrenValues(valuesFromP: boolean, valuesFromK: boolean, keysPropsMix: boolean): LChildrenValues;
    get value(): any;
    get type(): ExtendedPieceType;
    get childrenKeys(): LChildrenKeys;
    get parentNode(): LenkaNode;
    set parentNode(parent: LenkaNode);
    get parentTarget(): LenkaNode;
    set parentTarget(parent: LenkaNode);
    get root(): LenkaNode;
    set root(root: LenkaNode);
    get target(): any;
    set target(targetValue: unknown);
    get index(): number;
    set index(index: number);
    get level(): number;
    set level(level: number);
    get label(): number;
    set label(label: number);
    get producedBy(): any;
    get producedAs(): LProducedAs;
    get isItADouble(): boolean;
    set isItADouble(isDouble: boolean);
    get isItAPrimitive(): boolean;
    get isItAnArray(): boolean;
    get isItMissed(): boolean;
    get isItProcessed(): boolean;
    get summary(): LSummary;
    get customizerParams(): LenkaCustomizerParams;
    private setValueAndType;
    private includeThisValueToParentTarget;
    private _value;
    private _type;
    private _parentNode;
    private _parentTarget;
    private _root;
    private _target;
    private _index;
    private _level;
    private _label;
    private _producedBy;
    private _producedAs;
    private _summary;
    private _childrenKeys;
    private _childrenValues;
    private _isItADouble;
    private _isItAPrimitive;
    private _isItAnArray;
    private _isItCustomized;
    private _isItMissed;
    private _isItProcessed;
    private _customizerParams;
}
